@page "/"
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components
@using ServerBee.Data.Models
@using ServerBee.Services
@using Microsoft.AspNetCore.Authorization

@inject DbHelperService dbHelper

@attribute [Authorize]

<main style="background-color: #e6fff2; min-height: 100vh; padding: 2rem; font-family: 'Segoe UI', sans-serif; color: #333;">
    <!-- Top Header -->
    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 2rem;">
        <div style="font-size: 1.75rem; font-weight: bold;">Direct Deposit Bank</div>
        <div style="display: flex; align-items: center; gap: 0.5rem; background: white; padding: 0.5rem 1rem; border-radius: 999px; box-shadow: 0 2px 8px rgba(0,0,0,0.1);">
            <img src="https://tse2.mm.bing.net/th?id=OIP.2k3S6xzUZsJVxnU3vPiPCAHaD4&pid=Api&P=0&h=220" alt="User Image" style="border-radius: 80%;" />
        </div>
    </div>

    <!-- Account Balance Card -->
    <section style="background: white; border-radius: 1rem; padding: 1.5rem; box-shadow: 0 4px 12px rgba(0,0,0,0.1); margin-bottom: 2rem;">
        <h2 style="margin-top: 0; color: #084b37;">💳 Balance</h2>

        <label for="from-account" style="font-weight: 500;">From Account</label>
        <select id="from-account" @bind="selectedAccount"
                style="display: block; margin: 0.5rem 0 1rem 0; padding: 0.5rem; border-radius: 0.5rem; border: 1px solid #ccc; font-size: 1rem;">
            @foreach (var acct in userAccounts)
            {
                <option value="@acct.AccountNumber">@acct.AccountType (@acct.AccountNumber)</option>
            }
        </select>

        <ul style="list-style: none; padding-left: 0; font-size: 1.2rem;">
            <li>Balance: <strong>@GetBalanceDisplay()</strong></li>
        </ul>
    </section>

    <!-- Recent Transactions Card -->
    <section style="background: white; border-radius: 1rem; padding: 1.5rem; box-shadow: 0 4px 12px rgba(0,0,0,0.1);">
        <h3 style="margin-top: 0; color: #084b37;">📋 Recent Transactions</h3>

        <ul style="list-style: none; padding-left: 0;">
            @if (recentTransactions != null)
            {
                @foreach (var txn in recentTransactions)
                {
                    <li style="margin-bottom: 0.75rem; font-size: 1.1rem;">
                        <span style="font-size: 1.3rem;">@GetEmoji(txn.TransactionType ?? "")</span>
                        <span style="margin-left: 0.5rem;">@txn.TransactionType - @txn.PayeePayerAccountNumber</span> – 
                        <strong>@("$" + txn.Amount?.ToString("F2") ?? "$0.00")</strong>
                    </li>
                }
            }
            else
            {
                <li>Loading...</li>
            }
        </ul>
    </section>
</main>

@code {
    private string selectedAccount = "";
    private string userName = "User";

    private List<Account> userAccounts = new();
    private List<Transaction>? recentTransactions;

    protected override async Task OnInitializedAsync()
    {
        userAccounts = await dbHelper.GetMoneyAccountsAsync() ?? new List<Account>();

        if (userAccounts.Any())
        {
            selectedAccount = userAccounts.First().AccountNumber;
        }

        recentTransactions = await dbHelper.GetTransactionHistoryAsync(5, 0);
    }

    private string GetBalanceDisplay()
{
    var selected = userAccounts
        .FirstOrDefault(a => a.AccountNumber == selectedAccount);

    if (selected?.CurrentBalance != null)
    {
        // Format as plain number with two decimals, then prefix $
        return "$" + selected.CurrentBalance.Value.ToString("F2");
    }
    else
    {
        return "$0.00";
    }
}


    private string GetEmoji(string? type) => (type ?? "").ToLower() switch
    {
        "deposit" => "💵",
        "withdraw" => "🏧",
        "transfer" => "🔁",
        "purchase" => "🛒",
        _ => "💸"
    };
}
