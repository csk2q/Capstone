@page "/Accounts"
@using Microsoft.AspNetCore.Authorization
@rendermode InteractiveServer
@using ServerBee.Data.Models

@attribute [Authorize]

@inject ServerBee.Services.DbHelperService DbHelperService


<main style="background-color: #e6fff2; min-height: 100vh; padding: 2rem; font-family: 'Segoe UI', sans-serif; color: #333;">
    <h1 style="color: #084b37; margin-bottom: 1.5rem;">🏦 My Accounts</h1>

    <section style="display: flex; flex-wrap: wrap; gap: 2rem;">
        @if (userAccounts.Any())
        {
            @foreach (var acct in userAccounts)
            {
                <div style="background: white; border-radius: 1rem; padding: 1.5rem; width: 280px; box-shadow: 0 4px 12px rgba(0,0,0,0.1); transition: transform 0.2s ease; cursor: pointer;">
                    <h2 style="margin: 0; color: #084b37;">@acct.AccountType</h2>
                    <p style="margin: 0.5rem 0;">Account #: @acct.AccountNumber</p>
                     <p style="font-size: 1.2rem; font-weight: bold;"> Balance: @($"${(acct.CurrentBalance ?? 0m):F2}")</p>
                </div>
            }
        }
        else
        {
            <p style="font-size: 1.1rem; color: #555;">You do not have an account with us yet, set up an account today!</p>
        }
    </section>

     <!-- Delete Account Card -->
    <section style="margin-top: 3rem;">
        <div style="background: white; border-radius: 1rem; padding: 1.5rem; box-shadow: 0 4px 12px rgba(0,0,0,0.1); max-width: 600px; margin: auto;">
            <h2 style="margin-top: 0; color: #084b37;">Delete an Account</h2>

            @if (userAccounts.Any())
            {
                <EditForm Model="deleteModel" OnValidSubmit="HandleDelete">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="form-group mb-3">
                        <label for="deleteSelect">Choose an account to delete</label>
                        <InputSelect id="deleteSelect" @bind-Value="deleteModel.AccountNumber" class="form-control">
                            <option value="">-- select --</option>
                            @foreach (var acct in userAccounts)
                            {
                                <option value="@acct.AccountNumber">
                                    @acct.AccountNumber (@($"${(acct.CurrentBalance ?? 0m):F2}"))
                                </option>
                            }
                        </InputSelect>
                    </div>

                    <button type="submit" class="btn btn-danger" disabled="@(string.IsNullOrEmpty(deleteModel.AccountNumber))">
                        Delete selected account
                    </button>
                </EditForm>
            }
            else
            {
                <p style="font-size: 1rem; color: #555;">No linked accounts available to delete.</p>
            }

            @if (feedback is not null)
            {
                <div class="mt-3 alert @feedbackClass">@feedback</div>
            }
        </div>
    </section>
</main>

@code {
    private List<Account> userAccounts = new();

    private DeleteModel deleteModel = new();
    private string? feedback;
    private string? feedbackClass;

    protected override async Task OnInitializedAsync()
    {
        userAccounts = await DbHelperService.GetMoneyAccountsAsync();
    }

    private async Task HandleDelete(EditContext _)
    {
        var ok = await DbHelperService.RemoveAccountAsync(deleteModel.AccountNumber!);
        if (ok)
        {
            userAccounts = await DbHelperService.GetMoneyAccountsAsync();
            feedback = $"Account {deleteModel.AccountNumber} deleted successfully.";
            feedbackClass = "alert-success";
            deleteModel = new DeleteModel();
        }
        else
        {
            feedback = $"Failed to delete account {deleteModel.AccountNumber}.";
            feedbackClass = "alert-danger";
        }
    }

    private class DeleteModel
    {
        [System.ComponentModel.DataAnnotations.Required(ErrorMessage = "Please select an account")]
public string? AccountNumber { get; set; }
    }
}
